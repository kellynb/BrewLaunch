{"version":3,"sources":["Components/Nav/MenuList/MenuList.js","Components/Nav/Nav.js","Components/Home/BrewButton/BrewButton.js","Components/Home/Fermenter/FermenterView.js","Components/Home/Fermenter/FermenterContainer.js","Components/Home/Fermenter/FermenterFetch.js","Components/Home/HomeView.js","Components/Home/HomeContainer.js","Components/Brew/StartBatch/StyleBatch.js","Components/Brew/StartBatch/StartBatch.js","Components/Brew/BrewMetrics/BrewMetricsStyle.js","Components/Brew/BrewMetrics/BrewMetrics.js","Components/Brew/Transfer/Transfer.js","Components/Brew/BrewView.js","Components/Brew/BrewFetch.js","Components/Brew/BrewContainer.js","App.js","serviceWorker.js","index.js","Images/beerLogo.png"],"names":["MenuList","props","react_default","a","createElement","Menu_default","id","anchorEl","open","Boolean","onClose","handleClose","MenuItem_default","onClick","Link","to","className","Nav","state","handleClick","event","_this","setState","currentTarget","this","classes","root","AppBar_default","position","appbar","Toolbar_default","toolbar","src","logo","alt","Typography_default","variant","color","grow","IconButton_default","menuButton","aria-owns","undefined","aria-haspopup","Icon_default","Nav_MenuList_MenuList","Component","withStyles","flexGrow","height","backgroundColor","width","fontFamily","fontSize","display","flexDirection","justifyContent","textAlign","padding","BrewButton","FermenterView","map","fermenter","styles","runOff","key","tank","style","number","bbls","reduce","acc","bbl","FermenterContainer","cTanks","briteTanks","fetch","body","JSON","stringify","headers","content-type","method","then","response","json","data","console","log","Fermenter_FermenterView","HomeView","Components_Nav_Nav","Home_BrewButton_BrewButton","Fermenter_FermenterContainer","HomeContainer","Home_HomeView","theme","formControl","margin","spacing","unit","textField","marginLeft","marginRight","input","cssLabel","&$cssFocused","fontWeight","cssFocused","cssUnderline","&:after","borderBottomColor","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","notchedOutline","inputNames","name","value","brewBatch","onChange","handleBrewNumber","options","prevNum","batch","prevId","previousBatch","userNumberOptions","handleBatch","optionArr","i","charCodeAt","push","num","String","fromCharCode","enter","userIdOptions","currentStyle","prevStyle","styleOptions","tanks","currentTank","prevTank","tankOptions","index","TextField_default","select","label","InputLabelProps","focused","InputProps","option","StartBatch","StartBatch_StyleBatch","handleEnter","type","strikeVolume","mashTemp","spargeVolume","startingBrix","kettleVolume","whirlPoolVolume","fmVolume","notes","BrewMetrics","BrewMetrics_BrewMetricsStyle","Transfer","handleTransfer","BrewView","Brew_StartBatch_StartBatch","Brew_BrewMetrics_BrewMetrics","Brew_Transfer_Transfer","updateBatch","batchObj","concat","catch","err","error","getBatch","batchVal","length","val","changeNull","lastBatch","submit","runInterval","setInterval","updateMetricData","Object","objectSpread","tankList","forEach","getTanks","getLastSubmit","BrewContainer","e","target","defineProperty","currentState","preventDefault","getData","enterBrew","tankObj","fillTank","renderRedirect","componentWillUnmount","clearInterval","history","componentDidMount","assertThisInitialized","Brew_BrewView","App","Switch","Route","path","exact","render","Home_HomeContainer","Brew_BrewContainer","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.462c561e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MenuList = (props) => {\r\n\r\n    return (\r\n      <div>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={props.anchorEl} \r\n          open={Boolean(props.anchorEl)}\r\n          onClose={props.handleClose}>\r\n          <MenuItem onClick={props.handleClose}>\r\n            <Link to='/' className='links'>Home</Link>\r\n          </MenuItem>\r\n          <MenuItem onClick={props.handleClose}>\r\n            <Link to='/Brew' className='links'>Brew Batch</Link>\r\n          </MenuItem>\r\n          <MenuItem onClick={props.handleClose}>Historic Brew</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MenuList;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport logo from '../../Images/beerLogo.png';\r\nimport MenuList from './MenuList/MenuList';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport '../../App.css';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    height: '70px',\r\n  },\r\n\r\n  appbar: {\r\n    backgroundColor: '#5c4925;'\r\n  },\r\n\r\n  grow: {\r\n    width: 'auto',\r\n    fontFamily: 'Fira Sans Condensed',\r\n    color: '#e6e5d4',\r\n    fontSize: '25px'\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    textAlign: 'center'\r\n  },\r\n\r\n  menuButton: {\r\n    padding: 0\r\n  },\r\n\r\n};\r\n\r\nclass Nav extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render () {\r\n    const { anchorEl } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" className={classes.appbar}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <img src={logo} alt='Thirsy Planet Logo' id='logo' />\r\n            <Typography variant=\"h1\" color=\"inherit\" className={classes.grow}>\r\n              Very Good Brewing Company\r\n            </Typography>\r\n            <IconButton className={classes.menuButton} color=\"inherit\"\r\n              aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={this.handleClick}>\r\n              <Icon>menu</Icon>\r\n              <MenuList anchorEl ={this.state.anchorEl} handleClose={this.handleClose}/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\nexport default withStyles(styles)(Nav);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../../App.css';\r\n\r\nconst BrewButton = () => {\r\n\r\n    return (\r\n        \r\n            <button className=\"allButtons\">\r\n                <Link to='/Brew' className='links'>Brew Batch</Link>\r\n            </button>\r\n    )\r\n\r\n}\r\n\r\nexport default BrewButton;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nconst FermenterView = (props) => {\r\n    return (\r\n        <section>\r\n            {props.state.map( fermenter => {\r\n                \r\n                const styles = {\r\n                    backgroundColor: \"#5d9732\",\r\n\r\n                }\r\n                \r\n                if (!fermenter.runOff) {\r\n                    styles.backgroundColor = \"#d1d0bb\"\r\n                }\r\n\r\n                return (\r\n                        <div className = \"cFermenter\" key={fermenter.tank} style={styles}>\r\n                            <h3 className=\"TankNumber\">{fermenter.tank}</h3>\r\n                            {fermenter.runOff ? \r\n                                <div className=\"fermenterData\">\r\n                                    <h4>Batch Number: {fermenter.number}</h4>\r\n                                    <h4>Beer Style: {fermenter.style}</h4>\r\n                                    <h4>Volume: {fermenter.bbls.reduce( (acc, bbl) => (acc +bbl), 0)} bbls</h4>\r\n                                </div>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                )\r\n            })}\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\nexport default FermenterView;","import React, { Component } from 'react';\r\nimport FermenterView from './FermenterView';\r\nimport {getFermenters} from './FermenterFetch';\r\n\r\nclass FermenterContainer extends Component {\r\n    state = {\r\n        cTanks : [],\r\n        briteTanks: []\r\n    }\r\n\r\n    componentDidMount () {\r\n        getFermenters(this);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <FermenterView state={this.state.cTanks}/>\r\n        )\r\n    }   \r\n    \r\n}\r\n\r\nexport default FermenterContainer;","\r\nexport function getFermenters(state) {\r\n    return fetch(\"/Fermenters\", {\r\n        body: JSON.stringify(),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            state.setState({\r\n              cTanks: data\r\n        })\r\n      })\r\n}","import Nav from '../Nav/Nav';\r\nimport BrewButton from '../Home/BrewButton/BrewButton';\r\nimport React from 'react';\r\nimport FermenterContainer from './Fermenter/FermenterContainer'; \r\nimport '../../App.css';\r\n\r\n\r\nconst HomeView = () => {\r\n    return (\r\n        <main>\r\n            <Nav />\r\n            <section className='topTitle'>\r\n                <BrewButton/>\r\n            </section>\r\n            <section id=\"brewFarm\">\r\n                <FermenterContainer/>\r\n                {/* <BriteTank/> */}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HomeView;","import React from 'react';\r\nimport HomeView from './HomeView';\r\n\r\nconst HomeContainer = () => {\r\n   \r\n    return (\r\n        <HomeView/>\r\n    )\r\n    \r\n}\r\n\r\nexport default HomeContainer;","import '../../../App.css';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    \r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925',\r\n        fontSize: 15\r\n    },\r\n\r\n      cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n      },\r\n      cssFocused: {\r\n      },\r\n      cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n      cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\n\r\n \r\n\r\n  const StyleBatch = (props) => {\r\n    \r\n    const {classes} = props;\r\n\r\n    const userNumberOptions = () => {\r\n      if (props.brewBatch.prevNum && props.brewBatch.batch.prevId !== 'D') {\r\n        const previousBatch = props.brewBatch.prevNum\r\n        const numOptions = [previousBatch, previousBatch+1];\r\n        return numOptions\r\n      } else if (props.brewBatch.prevNum && props.brewBatch.batch.prevId === 'D') {\r\n        return [props.brewBatch.prevNum+1]\r\n      } else if (!props.brewBatch.prevNum && props.brewBatch.number) {\r\n        const num = [props.brewBatch.number];\r\n        return num\r\n      } else {\r\n        return [1];\r\n      }\r\n    }\r\n\r\n    const userIdOptions = () => {\r\n      if(props.brewBatch.prevNum === props.brewBatch.number) {\r\n          const getLastId = props.brewBatch.batch.prevId;\r\n          const toChar = getLastId.charCodeAt(0)\r\n          const optionArr = [];\r\n\r\n          for(let i=toChar+1; i<69; i++) {\r\n              optionArr.push(i);\r\n          }\r\n\r\n          const letterOptions = optionArr.map ( num => {\r\n              return String.fromCharCode(num)\r\n          })\r\n\r\n          return letterOptions;\r\n      } else if (props.brewBatch.prevNum !== props.brewBatch.number && !props.brewBatch.batch.enter) {\r\n         let optionB = [];\r\n         return optionB=['A'];\r\n      } else if(props.brewBatch.batch.enter) {\r\n         let optionC = [];\r\n        return optionC = [props.brewBatch.batch.id]\r\n      } else {\r\n        let optionD = [];\r\n        return optionD=[props.brewBatch.number];\r\n      }\r\n    }\r\n\r\n    const styleOptions = () => {\r\n      let style = ['Goat', 'BucketHead', 'Dillo', 'Pailhead', 'Specialty']\r\n      const currentStyle = [props.brewBatch.style]\r\n      if (props.brewBatch.prevNum === props.brewBatch.number) {\r\n        style = [props.brewBatch.prevStyle];\r\n        return style\r\n      } else if (props.brewBatch.prevNum !== props.brewBatch.number && props.brewBatch.prevNum === '') {\r\n        return currentStyle\r\n      } else {\r\n        return style\r\n      }\r\n    }\r\n\r\n    const tankOptions = () => {\r\n      let tanks = props.brewBatch.tanks;\r\n      const currentTank = [props.brewBatch.tank];\r\n      let tank = [\"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\"]\r\n      if (props.brewBatch.prevNum === props.brewBatch.number) {\r\n        tank = [props.brewBatch.prevTank];\r\n        return tank\r\n      } else if (props.brewBatch.prevNum !== props.brewBatch.number && props.brewBatch.prevNum !== '') {\r\n        return tanks\r\n      } else if (props.brewBatch.prevNum !== props.brewBatch.number && props.brewBatch.prevNum === '') {\r\n        return currentTank\r\n      } else {\r\n        return tank\r\n      }\r\n    }\r\n\r\n    const inputNames = ['Brew Number', 'Brew Letter', 'Style', 'Tank'];\r\n\r\n    const inputs = [\r\n        {\r\n          name:\"number\",\r\n          value: props.brewBatch.number,\r\n          onChange: props.handleBrewNumber,\r\n          options: userNumberOptions()\r\n        },\r\n        {\r\n          name:\"id\",\r\n          value: props.brewBatch.batch.id,\r\n          onChange: props.handleBatch,\r\n          options: userIdOptions()\r\n        },\r\n        {\r\n          name:\"style\",\r\n          value: props.brewBatch.style,\r\n          onChange: props.handleBrewNumber,\r\n          options: styleOptions()\r\n        },\r\n        {\r\n          name:\"tank\",\r\n          value: props.brewBatch.tank,\r\n          onChange: props.handleBrewNumber,\r\n          options: tankOptions()\r\n        }\r\n      ];\r\n\r\n      \r\n\r\n    return (\r\n      inputs.map((input,index) =>\r\n            <TextField\r\n                select\r\n                value={input.value}\r\n                onChange={input.onChange}\r\n                name = {input.name}\r\n                key ={index} \r\n                className={classes.textField} \r\n                variant=\"outlined\" \r\n                label= {inputNames[index]}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                    },\r\n                  }} \r\n                InputProps={{classes: \r\n                    { root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                      input: classes.input\r\n                    }\r\n              }}  > \r\n\r\n                  {input.options \r\n                    ? \r\n                      input.options.map( (option, index) =>\r\n                        <MenuItem key={index} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                        )\r\n                  : null}\r\n              </TextField>\r\n              \r\n          )\r\n        )\r\n\r\n  }\r\n\r\n  export default withStyles(styles)(StyleBatch);\r\n\r\n  ","import '../../../App.css';\r\nimport React from 'react';\r\nimport StyleBatch from './StyleBatch';\r\n\r\n\r\nconst StartBatch = (props) => {\r\n\r\n    return (\r\n      <section className=\"userInputs\">\r\n          <h2>Brew Information</h2>\r\n          <form className=\"batchValue\">\r\n              <StyleBatch {...props} />\r\n          </form>\r\n          <div id=\"batchEnter\">\r\n              {!props.brewBatch.enter ? <button onClick={props.handleEnter} className=\"allButtons\">Enter Batch</button> : null}\r\n          </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default StartBatch;","import '../../../App.css';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925'\r\n    },\r\n\r\n      cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n      },\r\n      cssFocused: {},\r\n      cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n      cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\n  const BrewMetricsStyle = (props) => {\r\n    const {classes} = props;\r\n\r\n    const inputNames = ['Strike Volume', 'Mash Temp', 'Sparge Volume', \r\n                        'Kettle Brix', 'Kettle Volume', 'Whirlpool Volume',\r\n                        'Flow Meter Volume', 'Notes'];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"number\", \r\n        name:\"strikeVolume\",\r\n        value: props.brewBatch.batch.strikeVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"mashTemp\",\r\n        value: props.brewBatch.batch.mashTemp,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"spargeVolume\",\r\n        value: props.brewBatch.batch.spargeVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"startingBrix\",\r\n        value: props.brewBatch.batch.startingBrix,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"kettleVolume\",\r\n        value: props.brewBatch.batch.kettleVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"whirlPoolVolume\",\r\n        value: props.brewBatch.batch.whirlPoolVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"fmVolume\",\r\n        value: props.brewBatch.batch.fmVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"text\", \r\n        name:\"notes\",\r\n        value: props.brewBatch.batch.notes,\r\n        onChange: props.handleBatch\r\n      }\r\n    ];\r\n\r\n    return (\r\n      inputs.map((input,index) =>\r\n        <TextField\r\n            value={input.value}\r\n            onChange={input.onChange}\r\n            type= {input.type}\r\n            name = {input.name}\r\n            key ={index} \r\n            className={classes.textField} \r\n            variant=\"outlined\" \r\n            label= {inputNames[index]}\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                  focused: classes.cssFocused,\r\n                },\r\n              }} \r\n            InputProps={{classes: \r\n                { root: classes.cssOutlinedInput,\r\n                  focused: classes.cssFocused,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  input: classes.input\r\n                }\r\n          }}  >\r\n        </TextField>\r\n      )\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  export default withStyles(styles)(BrewMetricsStyle);","import '../../../App.css';\r\nimport React from 'react';\r\nimport BrewMetricsStyle from './BrewMetricsStyle';\r\n\r\nconst BrewMetrics = (props) => {\r\n    return (\r\n        <section className=\"userInputs\">\r\n            <h2>Brew Data</h2>\r\n            <form className=\"batchValue\">\r\n                <BrewMetricsStyle {...props} />\r\n            </form>\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default BrewMetrics;","import '../../../App.css';\r\nimport React from 'react';\r\n\r\n\r\nconst Transfer = (props) => {\r\n\r\n    return (\r\n        <button className=\"allButtons\" onClick={props.handleTransfer}>\r\n           Runoff To {props.brewBatch.tank} \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Transfer;","import React from 'react';\r\nimport Nav from '../Nav/Nav';\r\nimport '../../App.css';\r\nimport StartBatch from './StartBatch/StartBatch';\r\nimport BrewMetrics from './BrewMetrics/BrewMetrics';\r\nimport Transfer from './Transfer/Transfer';\r\n\r\nconst BrewView = (props) => {\r\n\r\n    return (\r\n        <main id=\"brewMain\">\r\n            <Nav />\r\n            <section id=\"startBatch\">\r\n                <StartBatch {...props} />\r\n                {props.brewBatch.batch.enter ? <BrewMetrics {...props}/> : null}\r\n                {props.brewBatch.batch.enter ? <Transfer {...props} />: null}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BrewView;","\r\nexport function enterBrew(batch) {\r\n    return fetch(\"/Brew\", {\r\n        body: JSON.stringify(batch),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n      })\r\n}\r\n\r\nexport function enterBatch(batch) {\r\n  return fetch(\"/Brew\", {\r\n    body: JSON.stringify(batch),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'PUT'\r\n  }).catch(err => {\r\n    console.error('Request failed', err)\r\n  })\r\n}\r\n\r\nexport function updateBatch(id, batchObj) {\r\n    fetch(`/Brew/${id}`, {\r\n      body: JSON.stringify(batchObj),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'PUT'\r\n      }).catch(err => {\r\n        console.error('Request failed', err)\r\n      })\r\n}\r\n\r\n// Putting batch into a tank. Not sure this is the best organizational practice\r\nexport function fillTank(id, batchObj) {\r\n  fetch(`/Tank/${id}`, {\r\n    body: JSON.stringify(batchObj),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'PUT'\r\n    }).catch(err => {\r\n      console.error('Request failed', err)\r\n    })\r\n}\r\n\r\n\r\nexport function getBatch(state) {\r\n  fetch(\"/Brew\", {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'GET'\r\n    })\r\n    .then(response => response.json())\r\n      .then(data => {\r\n        const changeNull = (data) => {\r\n          const batchVal = data[0].batch[data[0].batch.length-1];\r\n          \r\n          for (let val in batchVal) {\r\n            const values = batchVal[val]\r\n            if (typeof values === 'object') {\r\n              batchVal[val] = '';\r\n            }\r\n          }\r\n\r\n          return data\r\n        }\r\n       \r\n        if (data[0] !== undefined) {\r\n          changeNull(data);\r\n          const lastBatch = data[0].batch[data[0].batch.length-1];\r\n          state.setState(\r\n            {\r\n              number: data[0].number,\r\n              style: data[0].style,\r\n              tank: data[0].tank,\r\n              batch: {\r\n                id: lastBatch.id,\r\n                strikeVolume: lastBatch.strikeVolume,\r\n                mashTemp: lastBatch.mashTemp,\r\n                spargeVolume: lastBatch.spargeVolume,\r\n                startingBrix: lastBatch.startingBrix,\r\n                kettleVolume: lastBatch.kettleVolume,\r\n                whirlPoolVolume: lastBatch.whirlPoolVolume,\r\n                fmVolume: lastBatch.fmVolume,\r\n                notes: lastBatch.notes,\r\n                enter: lastBatch.enter,\r\n                submit: lastBatch.submit\r\n              }\r\n            },\r\n            () => {\r\n              state.runInterval = setInterval(\r\n                () => state.updateMetricData(),\r\n                30000\r\n              );\r\n            }\r\n          );\r\n        } else {\r\n          getLastSubmit(state);\r\n        } \r\n      }) \r\n}\r\n\r\nfunction getLastSubmit (state) {\r\n  fetch(\"/Brewsubmit\", {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'GET'\r\n  }).then(response => response.json())\r\n    .then(data => {\r\n        state.setState({\r\n          prevNum: data.number,\r\n          prevStyle: data.style,\r\n          prevTank: data.tank,\r\n          batch: {\r\n            ...state.state.batch,\r\n            prevId: data.batch[data.batch.length-1].id\r\n          }\r\n      });\r\n        getTanks(state)\r\n    })\r\n}\r\n\r\nfunction getTanks (state) {\r\n  fetch(\"/OpenTanks\", {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'GET'\r\n  }).then(response => response.json())\r\n    .then(data => {\r\n        const tankList = [];\r\n        data.forEach(tank => {\r\n          tankList.push(tank.tank)\r\n        })\r\n        state.setState({\r\n          tanks: tankList\r\n        })\r\n     \r\n    })\r\n}","import React, {Component} from 'react';\r\nimport BrewView from './BrewView';\r\nimport {enterBrew, enterBatch, getBatch, updateBatch,fillTank} from './BrewFetch';\r\n\r\nclass BrewContainer extends Component {\r\n\r\n    state = {\r\n      number: '',\r\n      prevNum: '',\r\n      style: '',\r\n      prevStyle: '',\r\n      tank: '',\r\n      prevTank: '',\r\n      tanks: [],\r\n      batch: \r\n          {id: \"\",\r\n           prevId: \"\",\r\n           strikeVolume: \"\",\r\n           mashTemp: \"\",\r\n           spargeVolume: \"\",\r\n           startingBrix: \"\",\r\n           kettleVolume: \"\",\r\n           whirlPoolVolume: \"\",\r\n           fmVolume: \"\",\r\n           notes: '',\r\n           enter: false,\r\n           submit: false,\r\n          }      \r\n    }\r\n\r\n    // stores the setInterval value\r\n    runInterval = 0;\r\n    \r\n      \r\n    handleBrewNumber = (e) => {\r\n      const name = e.target.name;\r\n      const val = e.target.value;\r\n\r\n      this.setState({ [name]: val });\r\n    }\r\n\r\n    handleBatch = (e) => {\r\n      const { batch } = { ...this.state };\r\n      const currentState = batch;\r\n      const name = e.target.name;\r\n      currentState[name] = e.target.value\r\n\r\n      this.setState({ batch: currentState});\r\n\r\n    }\r\n\r\n    updateMetricData = () => {\r\n      const id = this.state.number;\r\n      const batch = this.state.batch;\r\n      const batchObj = {\r\n        number: id,\r\n        batch: batch,\r\n      }\r\n      updateBatch(id, batchObj)\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n      e.preventDefault();\r\n      this.setState({ \r\n        batch: {\r\n            ...this.state.batch,\r\n            enter: !this.state.enter\r\n          }}, () => {\r\n            const getData = this.state;\r\n            if (this.state.prevNum === this.state.number) {\r\n              enterBatch(getData);\r\n            } else {\r\n              enterBrew(getData);\r\n            }\r\n            this.runInterval = setInterval(() => this.updateMetricData(),30000)\r\n          });   \r\n    }\r\n\r\n    handleTransfer = (e) => {\r\n      this.setState({\r\n        batch: {\r\n        ...this.state.batch,\r\n        submit: !this.state.submit\r\n        }}, () => {\r\n        const id = this.state.number;\r\n        const tank = this.state.tank;\r\n        const style = this.state.style;\r\n        const runOff = this.state.batch.submit\r\n        const batch = this.state.batch;\r\n        const batchObj = {\r\n            number: id,\r\n            batch: batch\r\n        }\r\n        const tankObj = {\r\n            number: id,\r\n            tank: tank,\r\n            style: style,\r\n            batch: batch.fmVolume,\r\n            runOff: runOff\r\n        }\r\n        updateBatch(id, batchObj);\r\n        fillTank(id, tankObj);\r\n        this.renderRedirect();\r\n        })      \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      clearInterval(this.runInterval);\r\n    }\r\n\r\n    // user get redirected to homepage after clicking on Runoff Button\r\n    renderRedirect = () => {\r\n        this.props.history.push('/')\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n      getBatch(this);\r\n    }\r\n\r\n    render () {\r\n      return(\r\n        <div>\r\n            <BrewView \r\n              brewBatch={this.state} \r\n              handleBrewNumber={this.handleBrewNumber} \r\n              handleBatch={this.handleBatch} \r\n              handleEnter={this.handleEnter}\r\n              handleTransfer={this.handleTransfer}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BrewContainer;","import React, { Component } from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport HomeContainer from './Components/Home/HomeContainer';\r\nimport BrewContainer from './Components/Brew/BrewContainer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n  }\r\n  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route path ='/' exact render ={ (props) => <HomeContainer {...props}/> } />\r\n          <Route path ='/Brew' render ={ (props) => <BrewContainer {...props}/> } />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beerLogo.000cdd1b.png\";"],"sourceRoot":""}