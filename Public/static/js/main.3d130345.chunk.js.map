{"version":3,"sources":["Images/beerLogo.png","store.js","Reducers.js","Components/Nav/MenuList/MenuList.js","Components/Nav/Nav.js","Components/Home/BrewButton/BrewButton.js","Components/Home/Fermenter/FermenterFetch.js","Components/Home/Fermenter/FermentationStats/Fermenting.js","Components/Home/Fermenter/FermentationStats/Conditioning.js","Components/Home/Fermenter/FermentationStats/Empty.js","Components/Home/Fermenter/FermenterView.js","Components/Home/Fermenter/Fermenter.js","Components/Home/Fermenter/FermenterContainer.js","Components/Home/Fermenter/FermenterActions.js","Components/Home/HomeView.js","Components/Home/Home.js","Components/ProductionTank/FermenterIcon/FermenterIcon.js","Components/ProductionTank/FermenterIcon/FermenterIconContainer.js","Components/ProductionTank/AppComponents/AppBar/MenuItems/MenuItems.js","Components/ProductionTank/AppComponents/AppBar/AppBar.js","Components/ProductionTank/AppComponents/AppBar/AppBarContainer.js","Components/ProductionTank/AppComponents/AppBar/AppBarActions.js","Components/ProductionTank/AppComponents/Temperature/Temperature.js","Components/ProductionTank/AppComponents/Temperature/TemparatureContainer.js","Components/ProductionTank/AppComponents/Spund/Spund.js","Components/ProductionTank/AppComponents/Yeast/Yeast.js","Components/ProductionTank/AppComponents/Yeast/YeastContainer.js","Components/ProductionTank/AppComponents/Brix/Brix.js","Components/ProductionTank/AppComponents/Brix/BrixContainer.js","Components/ProductionTank/AppComponents/Save/Save.js","Components/ProductionTank/AppComponents/Empty/EmptyStatus.js","Components/ProductionTank/ProductionTank.js","Components/ProductionTank/ProductionFetch.js","Components/ProductionTank/ProductionActions.js","Components/ProductionTank/ProductionContainer.js","Components/Brew/StartBatch/StyleBatch.js","Components/Brew/StartBatch/StartBatch.js","Components/Brew/BrewMetrics/BrewMetricsStyle.js","Components/Brew/BrewMetrics/BrewMetrics.js","Components/Brew/Transfer/Transfer.js","Components/Brew/BrewView.js","Components/Brew/BrewFetch.js","Components/Brew/BrewContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","cTanks","state","arguments","length","undefined","action","type","value","emptyCTanks","selectTank","Object","objectSpread","status","store","createStore","applyMiddleware","thunk","MenuList","props","react_default","a","createElement","Menu_default","id","anchorEl","open","Boolean","onClose","handleClose","Link","to","className","MenuItem_default","onClick","Nav","handleClick","event","_this","setState","currentTarget","this","classes","root","AppBar_default","position","appbar","Toolbar_default","toolbar","src","logo","alt","Typography_default","variant","color","grow","IconButton_default","menuButton","aria-owns","aria-haspopup","icons_Menu_default","Nav_MenuList_MenuList","Component","withStyles","flexGrow","backgroundColor","fontFamily","fontSize","display","flexDirection","textAlign","padding","BrewButton","getFermenters","fetch","body","JSON","stringify","headers","content-type","method","Fermenting","fermenter","number","style","bbls","reduce","acc","bbl","tankTemp","brix","index","fermentingBrix","Conditioning","Empty","FermenterView","tanks","map","key","fermenting","conditioning","empty","setTank","tank","FermentationStats_Fermenting","FermentationStats_Conditioning","FermentationStats_Empty","Fermenter","orderTank","i","w","switchObjA","switchObjB","getTanks","Fermenter_FermenterView","withRouter","connect","dispatch","then","response","json","data","emptyTanks","runOff","push","history","concat","HomeView","Components_Nav_Nav","Home_BrewButton_BrewButton","FermenterContainer","Home","Home_HomeView","fillColor","fermenterIcon","fill","xmlns","xmlnsXlink","version","x","y","viewBox","xmlSpace","cx","cy","r","points","d","FermenterIcon","MenuItems","menuOptions","handleStatusChange","ButtonAppBar","valueAllLowerCase","toLowerCase","statusUpdate","changeStatus","getStatus","firstLetter","firstLetterUpperCase","toUpperCase","changeLetters","replace","AppBar_MenuItems_MenuItems","marginLeft","marginRight","boxShadow","AppBar","theme","formControl","margin","spacing","unit","textField","input","cssLabel","&$cssFocused","fontWeight","cssFocused","cssUnderline","&:after","borderBottomColor","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","notchedOutline","TextField_default","select","temp","onChange","userInput","name","onFocus","changeSelect","onBlur","label","InputLabelProps","focused","InputProps","endAdornment","InputAdornment_default","currentTime","Date","getTime","lastDate","date","diffTime","parse","days","moment","duration","asDays","Math","round","compareTemp","getChangeDate","timeDiff","getTemperatureDays","readOnly","TemperatureList","colorSwitchBase","green","&$colorChecked","& + $colorBar","colorBar","colorChecked","height","marginTop","marginBottom","FormControlLabel_default","control","Switch_default","checked","spund","spundInput","switchBase","bar","spundPressure","toDayMonthYearA","utc","yeastDumpA","format","toDayMonthYearB","yeastDumpB","yeastDump1","shrink","yeastDump2","YeastAction","brixAvg","selectBrix","fBrix","changeBrix","getBrixDays","Brix","Save","sendUpdate","EmptyStatus","ProductionTank","e","selectName","target","defineProperty","renderRedirect","batch","tankObj","loopState","entries","_i","_tankObj$key","_ref3","_ref2","slicedToArray","catch","err","console","error","componentDidMount","close","pressure","getTankParams","match","params","FermenterIconContainer","AppBarContainer","TemparatureContainer","BrixContainer","YeastContainer","AppComponents_Spund_Spund","AppComponents_Save_Save","Empty_EmptyStatus","getFermenter","width","previousBatch","brewBatch","prevNum","batchNum","batchEnter","enter","inputNames","handleBrewNumber","options","prevId","handleBatch","optionArr","charCodeAt","num","String","fromCharCode","userIdOptions","currentStyle","prevStyle","styleOptions","openTanks","currentTank","prevTank","tankOptions","option","StartBatch","StartBatch_StyleBatch","handleDelete","handleEnter","strikeVolume","mashTemp","spargeVolume","startingBrix","kettleVolume","whirlPoolVolume","fmVolume","required","runOffTemp","notes","BrewMetrics","BrewMetrics_BrewMetricsStyle","Transfer","handleTransfer","BrewView","Brew_StartBatch_StartBatch","Brew_BrewMetrics_BrewMetrics","Brew_Transfer_Transfer","updateBatch","batchObj","getLastSubmit","BrewContainer","opentTanks","submit","runInterval","val","currentState","updateMetricData","preventDefault","getData","createNewBatch","setInterval","clearInterval","deleteBrew","deleteBatch","fillFermenters","componentWillUnmount","changeNull","batchVal","updateStateBatchBrewing","lastBatch","updateStateLastCompletedBrew","batchArr","inputBatchSequence","brewIsEnterObj","lastBrewEnter","Brew_BrewView","App","Switch","Route","path","exact","render","Components_Home_Home","Brew_BrewContainer","ProductionContainer","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3d130345.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beerLogo.000cdd1b.png\";","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport {cTanks, emptyCTanks, selectTank} from './Reducers';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducers = combineReducers({cTanks, emptyCTanks, selectTank})\r\n\r\nlet store= createStore(reducers, storeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n\r\n","\r\n\r\nexport const cTanks = (state = [], action) =>{\r\n  switch (action.type) {\r\n    case \"GET_CTANKS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const emptyCTanks = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"EMPTY_CTANKS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const selectTank = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TANK\":\r\n      return action.value\r\n    case \"CHANGE_STATUS\":\r\n      return {...state, status: \"conditioning\"};\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MenuList = (props) => {\r\n\r\n    return (\r\n      <div>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={props.anchorEl} \r\n          open={Boolean(props.anchorEl)}\r\n          onClose={props.handleClose}>\r\n          <Link to='/' className='links'>\r\n            <MenuItem onClick={props.handleClose}>Home</MenuItem>\r\n          </Link>\r\n          <Link to='/Brew' className='links'>\r\n            <MenuItem onClick={props.handleClose}>Brew</MenuItem>\r\n          </Link>\r\n          <MenuItem onClick={props.handleClose}>Historic Brew</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MenuList;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport logo from '../../Images/beerLogo.png';\r\nimport MenuList from './MenuList/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport '../../App.css';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n\r\n  appbar: {\r\n    backgroundColor: '#5c4925',    \r\n  },\r\n\r\n  grow: {\r\n    fontFamily: 'Fira Sans Condensed',\r\n    color: '#e6e5d4',\r\n    fontSize: '25px',\r\n    flexGrow: 1\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    textAlign: 'center',  \r\n  },\r\n\r\n  menuButton: {\r\n    padding: 0\r\n  }\r\n\r\n};\r\n\r\nclass Nav extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render () {\r\n    const { anchorEl } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.appbar}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <img src={logo} alt='Thirsy Planet Logo' id='logo' />\r\n            <Typography variant=\"h1\" color=\"inherit\" className={classes.grow}>\r\n              Very Good Brewing Company\r\n            </Typography>\r\n            <IconButton className={classes.menuButton} color=\"inherit\"\r\n              aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={this.handleClick}>\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <MenuList anchorEl ={this.state.anchorEl} handleClose={this.handleClose}/>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\nexport default withStyles(styles)(Nav);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../../App.css';\r\n\r\nconst BrewButton = () => {\r\n\r\n    return (\r\n        \r\n            <button className=\"allButtons\">\r\n                <Link to='/Brew' className='links'>Brew Batch</Link>\r\n            </button>\r\n    )\r\n\r\n}\r\n\r\nexport default BrewButton;","\r\nexport function getFermenters() {\r\n    return fetch(\"/fermenters\", {\r\n        body: JSON.stringify(),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'GET'\r\n        })\r\n}","import React from 'react';\r\nimport '../../../../App.css';\r\n\r\nconst Fermenting = (props) => {\r\n   \r\n    return (\r\n        <div>\r\n            <h4>Batch Number: {props.fermenter.number}</h4>\r\n            <h4>Beer Style: {props.fermenter.style}</h4>\r\n            <h4>Volume: {props.fermenter.bbls.reduce( (acc, bbl) => (acc +bbl), 0)} bbls</h4>\r\n            <h4>Temp: {props.fermenter.tankTemp[props.fermenter.tankTemp.length-1] ? props.fermenter.tankTemp[props.fermenter.tankTemp.length-1].tankTemp: 0} F</h4>\r\n            <h4>Starting Brix: {props.fermenter.brix.reduce((acc,brix,index) => acc+(brix-acc)/(index+1),0)} brix </h4>\r\n            <h4>Fermenting Brix: {props.fermenter.fermentingBrix[props.fermenter.fermentingBrix.length-1] ? props.fermenter.fermentingBrix[props.fermenter.fermentingBrix.length-1].fermentingBrix : null}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fermenting;","import React from 'react';\r\nimport '../../../../App.css';\r\n\r\nconst Conditioning = (props) => {\r\n    return (\r\n        <div className=\"fermenterData\">\r\n            <h4>Batch Number: {props.fermenter.number}</h4>\r\n            <h4>Beer Style: {props.fermenter.style}</h4>\r\n            <h4>Volume: {props.fermenter.bbls.reduce( (acc, bbl) => (acc +bbl), 0)} bbls</h4>\r\n            <h4>Temp: {props.fermenter.tankTemp[props.fermenter.tankTemp.length-1] ? props.fermenter.tankTemp[props.fermenter.tankTemp.length-1].tankTemp: 0} F</h4>\r\n            <h4>Final Brix: {props.fermenter.fermentingBrix[props.fermenter.fermentingBrix.length-1] ? props.fermenter.fermentingBrix[props.fermenter.fermentingBrix.length-1].fermentingBrix : null}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conditioning;","import React from 'react';\r\nimport '../../../../App.css';\r\n\r\nconst Empty = (props) => {\r\n    return (\r\n        <div className=\"fermenterData\">\r\n            <h4>Empty</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Empty;","import React from 'react';\r\nimport Fermenting from './FermentationStats/Fermenting';\r\nimport Conditioning from './FermentationStats/Conditioning';\r\nimport Empty from './FermentationStats/Empty';\r\nimport '../../../App.css';\r\n\r\nconst FermenterView = (props) => {    \r\n    return (\r\n        <section>\r\n            {props.tanks.map( (fermenter,index) => {\r\n                const status = {\r\n                    fermenting: {\r\n                        backgroundColor: \"#5d9732\"\r\n                    },\r\n                    conditioning: {\r\n                        backgroundColor: \"#3490db\"\r\n                    },\r\n                    empty: {\r\n                        backgroundColor: \"#d1d0bb\"\r\n                    }\r\n                }\r\n                \r\n                const renderFermenter = () => {\r\n                    if (fermenter.status === 'fermenting') {\r\n                        return <Fermenting fermenter={fermenter} />\r\n                    } else if (fermenter.status === 'conditioning') {\r\n                        return <Conditioning fermenter={fermenter} />\r\n                    } else {\r\n                        return <Empty fermenter={fermenter} />\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    \r\n                    <div className = \"cFermenter\" key={index} style={{backgroundColor : status[fermenter.status].backgroundColor}}>\r\n                        <button onClick={() =>{props.setTank(fermenter)}} className=\"TankNumber\">\r\n                            <h3 id=\"fermenterVal\">{fermenter.tank}</h3>\r\n                        </button>\r\n                        <div className=\"fermenterData\">\r\n                            {renderFermenter()}\r\n                        </div>\r\n                        \r\n                     </div>   \r\n                )\r\n            })}\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\nexport default FermenterView;","import React, { Component } from 'react';\r\nimport FermenterView from './FermenterView';\r\n\r\nclass Fermenter extends Component {\r\n\r\n    componentDidMount () {\r\n      this.props.getTanks()\r\n    }\r\n\r\n    \r\n    orderTank = () => {\r\n        for(let i=0, w=1; w<this.props.tanks.length; i++, w++) {\r\n            let firstItem = this.props.tanks[i].tank;\r\n            let secondItem = this.props.tanks[w].tank;\r\n            \r\n\r\n            if(firstItem > secondItem) {\r\n                let switchObjA = this.props.tanks[i];\r\n                let switchObjB = this.props.tanks[w]\r\n                this.props.tanks[w] = switchObjA\r\n                this.props.tanks[i] = switchObjB\r\n                this.orderTank()\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        // Set tank order from database \r\n        this.orderTank();\r\n        return (\r\n            <FermenterView tanks={this.props.tanks} setTank={this.props.setTank}/>\r\n        )\r\n    }   \r\n    \r\n}\r\n\r\nexport default Fermenter;","import {connect} from 'react-redux';\r\nimport {getTanks,setTank} from './FermenterActions';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Fermenter from './Fermenter';\r\n\r\n\r\nfunction mapDispatchToProps(dispatch, props){\r\n      return {\r\n      getTanks: () => dispatch(getTanks()),\r\n      setTank: tank => dispatch(setTank(tank, props.history))\r\n      }\r\n   }\r\n\r\n\r\n   const mapStateToProps = (state) => {\r\n      return {\r\n         tanks: state.cTanks\r\n      }\r\n   }\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Fermenter));","import {getFermenters} from './FermenterFetch';\r\n\r\nexport function getTanks() {\r\n    return function(dispatch) {\r\n        return getFermenters()\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // FIND only empty tanks\r\n                const emptyTanks = data.reduce( (acc,tank) => {\r\n                    if(!tank.runOff) {\r\n                      acc.push(tank.tank);\r\n                    }\r\n                    return acc\r\n                }, [])\r\n\r\n                dispatch({\r\n                    type: \"GET_CTANKS\",\r\n                    value: data\r\n                })\r\n\r\n                dispatch({\r\n                    type: \"EMPTY_CTANKS\",\r\n                    value: emptyTanks\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport function setTank(tank,history) {\r\n    return function (dispatch) {\r\n        dispatch({\r\n                type: \"SET_TANK\",\r\n                value: tank\r\n                })\r\n        history.push(`/ProductionTank/${tank.tank}`)\r\n    }\r\n}","import Nav from '../Nav/Nav';\r\nimport BrewButton from '../Home/BrewButton/BrewButton';\r\nimport React from 'react';\r\nimport Fermenter from './Fermenter/FermenterContainer'; \r\nimport '../../App.css';\r\n\r\n\r\nconst HomeView = () => {\r\n    return (\r\n        <main>\r\n            <Nav />\r\n            <section className='topTitle'>\r\n                <BrewButton/>\r\n            </section>\r\n            <section id=\"brewFarm\">\r\n                <Fermenter/>\r\n                {/* <BriteTank/> */}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HomeView;","import React from 'react';\r\nimport HomeView from './HomeView';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomeView/>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n\r\n// Change color of background image\r\nconst fillColor = {\r\n    fermenting: \"#5d9732\",\r\n    conditioning: \"#3490db\",\r\n    empty: \"#5c4925\"\r\n}\r\n\r\nconst fermenterIcon = (props) => {\r\n    return  (   \r\n    <svg fill={fillColor[props.status]} id=\"fermentationVisuals\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 288\"  xmlSpace=\"preserve\">\r\n        <circle cx={216} cy=\"271.3\" r={4} />\r\n        <polygon points=\"213.1,257.2 213.1,261.5 172.8,261.5 172.8,205.3 163.9,190.1 163.9,277.3 166.5,277.3 166.5,281.4 161.9,281.4   161.9,284.3 174.5,284.3 174.5,281.4 169.9,281.4 169.9,277.3 172.8,277.3 172.8,267.3 259.5,267.3 259.5,277.3 262.4,277.3   262.4,281.4 257.8,281.4 257.8,284.3 270.1,284.3 270.1,281.4 265.5,281.4 265.5,277.3 268.1,277.3 268.1,190.1 259.5,205.3   259.5,261.5 218.9,261.5 218.9,257.2 \">\r\n        </polygon>\r\n        <path fill=\"none\" d=\"M174,11.5v9.7c8.9-2.8,20.5-4.6,33.4-5.1v-4.5H174V11.5z\">\r\n        </path>\r\n        <path fill=\"none\" d=\"M224.6,11.5V16c12.9,0.6,24.5,2.4,33.4,5.1v-9.7L224.6,11.5L224.6,11.5z\">\r\n        </path>\r\n        <path d=\"M174,11.5h33.4V16c1.9-0.1,3.8-0.1,5.8-0.2v-4.3c0-3.2-2.6-5.8-5.8-5.8H174c-3.2,0-5.8,2.6-5.8,5.8v11.7  c1.8-0.7,3.7-1.4,5.8-2.1V11.5z\">\r\n        </path>\r\n        <path d=\"M224.6,11.5H258v9.7c2.1,0.6,4,1.3,5.8,2.1V11.5c0-3.2-2.6-5.8-5.8-5.8h-33.4c-3.2,0-5.8,2.6-5.8,5.8v4.3  c1.9,0,3.9,0.1,5.8,0.2V11.5z\">\r\n        </path>\r\n        <path d=\"M159.5,85.2v68.9l54.7,93.9h3.7l54.5-94.1V85.2c0,0-20.4-3-56.5-3S159.5,85.2,159.5,85.2z\">\r\n        </path>\r\n        <path d=\"M282.2,40.3v116.3l-58.7,101.1h-15l-58.8-101.1V40.3c0,0,6.3-4.3,6.3-5.2c0-4.6,4.5-8.7,12.1-11.9c1.8-0.7,3.7-1.4,5.8-2.1  c8.9-2.8,20.5-4.6,33.4-5.1c1.9-0.1,3.8-0.1,5.8-0.2c1,0,1.9,0,2.9,0s1.9,0,2.9,0c1.9,0,3.9,0.1,5.8,0.2c12.9,0.6,24.5,2.4,33.4,5.1  c2.1,0.6,4,1.3,5.8,2.1c7.6,3.2,12.1,7.3,12.1,11.9C275.9,36,282.2,40.3,282.2,40.3z M276.5,154.9V43.2c-4.9-3.5-6.3-5.5-6.3-8.1  c0-1.6-2.2-3.7-6.5-5.7c-1.6-0.8-3.4-1.5-5.6-2.2c-7.7-2.6-18.9-4.8-33.4-5.4c-1.9-0.1-3.8-0.1-5.8-0.2c-1,0-1.9,0-2.9,0  s-1.9,0-2.9,0c-2,0-3.9,0.1-5.8,0.2c-14.5,0.6-25.7,2.9-33.4,5.4c-2.1,0.7-4,1.4-5.6,2.2c-4.3,2-6.5,4-6.5,5.5  c0,2.9-1.2,4.6-6.3,8.4v112L212,252h8.4L276.5,154.9z\">\r\n        </path>\r\n      </svg>\r\n    )\r\n}\r\n\r\nexport default fermenterIcon","import {connect} from 'react-redux';\r\nimport FermenterIcon from './FermenterIcon';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      status: state.selectTank.status\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FermenterIcon);","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst MenuItems = (props) => {\r\n    const menuOptions = {\r\n        fermenting: 'Conditioning'\r\n    }    \r\n\r\n    return (\r\n      <div>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={props.anchorEl} \r\n          open={Boolean(props.anchorEl)}\r\n          onClose={props.handleClose}>\r\n          <div onClick ={()=> {props.handleStatusChange(menuOptions[props.status])}} className=\"links\">\r\n              <MenuItem onClick={props.handleClose}>{menuOptions[props.status]}</MenuItem>\r\n          </div>\r\n        </Menu>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MenuItems;","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItems from './MenuItems/MenuItems';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  fermenting: {\r\n    backgroundColor: '#5d9732',\r\n    boxShadow: 'none'\r\n  },\r\n  conditioning: {\r\n    backgroundColor: '#3490db',\r\n    boxShadow: 'none'\r\n  },\r\n  empty: {\r\n    backgroundColor: \"#5c4925\",\r\n    boxShadow: 'none'\r\n  }\r\n};\r\n\r\nclass ButtonAppBar extends Component {\r\n\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleStatusChange = (value) => {\r\n    const valueAllLowerCase = value.toLowerCase();\r\n    this.props.statusUpdate(valueAllLowerCase);\r\n    this.props.changeStatus();\r\n  }\r\n\r\n  render () {\r\n    const getStatus = this.props.status\r\n    const { classes } = this.props;\r\n    const {anchorEl} = this.state;\r\n    const firstLetter = getStatus[0];\r\n    const firstLetterUpperCase = firstLetter.toUpperCase();\r\n    const changeLetters = getStatus.replace(firstLetter, firstLetterUpperCase);\r\n\r\n\r\n    return (\r\n      <div className={classes.root} >\r\n        <AppBar position=\"static\" className={classes[getStatus]}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.props.tank}: {changeLetters}\r\n            </Typography>\r\n            {getStatus === 'fermenting' ?\r\n              <IconButton \r\n                className={classes.menuButton} \r\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleClick}>\r\n                <MenuIcon/>\r\n              </IconButton>\r\n              :\r\n              null\r\n            }\r\n            <MenuItems \r\n              anchorEl ={this.state.anchorEl} \r\n              handleClose={this.handleClose} \r\n              status={getStatus} \r\n              handleStatusChange={this.handleStatusChange}/>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n}\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import {connect} from 'react-redux';\r\nimport AppBar from './AppBar';\r\nimport {setStatus} from './AppBarActions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      tank: state.selectTank.tank,\r\n      status: state.selectTank.status\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n   changeStatus: () => dispatch(setStatus())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);","\r\nexport function setStatus() {\r\n    return {\r\n        type: \"CHANGE_STATUS\"\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport '../../../../App.css';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925'\r\n    },\r\n\r\n    cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n    },\r\n    cssFocused: {},\r\n    cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\nconst TemperatureList = (props) => {\r\n    const {classes} = props;\r\n\r\n    const getTemperatureDays = () => {\r\n        const currentDate = new Date();\r\n        const currentTime = currentDate.getTime()\r\n          \r\n        if(props.temp.length === 1) {\r\n            const lastDate = props.temp[props.temp.length-1].date\r\n            const update = Date.parse(lastDate)\r\n            const diffTime = currentTime - update;\r\n            const diff = new moment.duration(diffTime);\r\n            const days = diff.asDays();\r\n            return (Math.round(days *100)/100);\r\n        } else if (props.temp.length === 0) {\r\n            return 0\r\n        } else {\r\n            for(let i=props.temp.length-1; i > -1; i-- ){\r\n                let compareTemp = props.temp[i+1];\r\n                if (compareTemp !== undefined) {\r\n                  if (compareTemp.tankTemp !== props.temp[i].tankTemp) {\r\n                    const getChangeDate = compareTemp.date;\r\n                    const updateDate = Date.parse(getChangeDate);\r\n                    const timeDiff = currentTime - updateDate;\r\n                    const diff = new moment.duration(timeDiff)\r\n                    const days = diff.asDays();\r\n                    return (Math.round(days *100)/100);\r\n                    }\r\n                }\r\n            }\r\n          \r\n        }\r\n          \r\n    }\r\n\r\n    const displayTemp = () => {\r\n        if (props.tankTemp) {\r\n            return props.tankTemp\r\n        } else if(props.select) {\r\n            return props.tankTemp\r\n        } else if (props.temp[props.temp.length-1]) {\r\n            return props.temp[props.temp.length-1].tankTemp\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fermentationData\">\r\n            <p>Temperature</p>\r\n            <div className = \"organizeFermentation\">\r\n                <TextField\r\n                    value={displayTemp()}\r\n                    onChange={props.userInput}\r\n                    type= \"number\"\r\n                    name = \"tankTemp\"\r\n                    id = \"tankTemp1\"\r\n                    onFocus ={props.changeSelect}\r\n                    onBlur = {props.changeSelect}\r\n                    className={classes.textField} \r\n                    variant=\"outlined\" \r\n                    label= \"Temp\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        classes: {\r\n                        root: classes.cssLabel,\r\n                        focused: classes.cssFocused,\r\n                        },\r\n                    }} \r\n                    InputProps={{classes: \r\n                        { root: classes.cssOutlinedInput,\r\n                        focused: classes.cssFocused,\r\n                        notchedOutline: classes.notchedOutline,\r\n                        input: classes.input,\r\n                        },\r\n                        endAdornment: <InputAdornment position=\"end\">F</InputAdornment>\r\n                    }}  >\r\n                </TextField>\r\n                <TextField\r\n                    value={getTemperatureDays()}\r\n                    type= \"number\"\r\n                    name = \"Time\"\r\n                    className={classes.textField} \r\n                    label= \"For\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        classes: {\r\n                        root: classes.cssLabel,\r\n                        focused: classes.cssFocused\r\n                        },\r\n                    }} \r\n                    InputProps={{\r\n                        classes: {\r\n                            focused: classes.cssLabel\r\n                        },\r\n                        endAdornment: <InputAdornment position=\"end\">Days</InputAdornment>,\r\n                        readOnly: true\r\n                    }}  >\r\n                </TextField> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(TemperatureList);","import {connect} from 'react-redux';\r\nimport TemperatureList from './Temperature';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      temp: state.selectTank.tankTemp\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TemperatureList);","import React from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport '../../../../App.css';\r\n\r\n\r\nconst styles = theme => ({\r\n    colorSwitchBase: {\r\n      color: green[300],\r\n      '&$colorChecked': {\r\n      color: green[500],\r\n      '& + $colorBar': {\r\n        backgroundColor: green[500],\r\n      },\r\n    },\r\n  },\r\n  colorBar: {},\r\n  colorChecked: {},\r\n  root: {\r\n    height: 56,\r\n    marginTop: 16,\r\n    marginBottom: 8\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n\r\n  textField: {\r\n      marginLeft: theme.spacing.unit,\r\n      marginRight: theme.spacing.unit,\r\n      backgroundColor: '#d1d0bb',\r\n    },\r\n  \r\n  input: {\r\n      color: '#5c4925'\r\n  },\r\n\r\n  cssLabel: {\r\n      '&$cssFocused': {\r\n        color: '#5c4925',\r\n        fontWeight: 'bold',\r\n        fontSize: 15\r\n      },\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n      '&:after': {\r\n        borderBottomColor: '#5c4925',\r\n      },\r\n    },\r\n  cssOutlinedInput: {\r\n      '&$cssFocused $notchedOutline': {\r\n        borderColor: '#5c4925',\r\n      },\r\n    },\r\n\r\n    notchedOutline: {\r\n    }\r\n})\r\n\r\nconst Spund = (props) => {\r\n    const { classes } = props;\r\n      return(\r\n        <div className=\"fermentationData\">\r\n            <p>Fermentation Pressure</p>\r\n            <div className=\"organizeFermentation\">\r\n              <FormControlLabel classes ={{root: classes.root}}\r\n                  control={\r\n                  <Switch\r\n                      checked={props.spund}\r\n                      onChange={props.spundInput}\r\n                      value={props.spund}\r\n                      name = \"spund\"\r\n                      classes={{\r\n                        switchBase: classes.colorSwitchBase,\r\n                        checked: classes.colorChecked,\r\n                        bar: classes.colorBar\r\n                      }}\r\n                  />\r\n                  }\r\n                  label=\"Spund\"\r\n              />\r\n              {\r\n              props.spund ?\r\n                <TextField\r\n                  value={props.spundPressure}\r\n                  onChange={props.userInput}\r\n                  type= \"number\"\r\n                  name = \"spundPressure\"\r\n                  className={classes.textField} \r\n                  variant=\"outlined\" \r\n                  label= \"Pressure\"\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                      classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                      },\r\n                  }} \r\n                  InputProps={{classes: \r\n                      { root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                      input: classes.input,\r\n                      },\r\n                      endAdornment: <InputAdornment position=\"end\">PSI</InputAdornment>\r\n                  }}  >\r\n                </TextField>\r\n              : null}\r\n            </div>\r\n        </div>\r\n      ) \r\n    \r\n}\r\n\r\n\r\nexport default withStyles(styles)(Spund);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport '../../../../App.css';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925'\r\n    },\r\n\r\n    cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n    },\r\n    cssFocused: {},\r\n    cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\nconst YeastAction = (props) => {\r\n    const {classes} = props;\r\n//    CLean up\r\n    const toDayMonthYearA = moment.utc(props.yeastDumpA).format('YYYY-MM-DD');\r\n    const toDayMonthYearB = moment.utc(props.yeastDumpB).format('YYYY-MM-DD');\r\n\r\n    const getValue1 = () => {\r\n        if (props.yeastDump1) {\r\n            return props.yeastDump1\r\n        } else if (props.yeastDumpA) {\r\n            return toDayMonthYearA\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const getValue2 = () => {\r\n        if (props.yeastDump2) {\r\n            return props.yeastDump2\r\n        } else if (props.yeastDumpB) {\r\n            return toDayMonthYearB\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fermentationData\">\r\n            <p>Yeast Removal</p>\r\n            <div className = \"organizeFermentation\">\r\n                <TextField\r\n                    value={getValue1()}\r\n                    onChange={props.userInput}\r\n                    type= \"date\"\r\n                    name = \"yeastDump1\"\r\n                    className={classes.textField} \r\n                    variant=\"outlined\" \r\n                    label= \"Dump 1\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }} \r\n                    InputProps={{classes: \r\n                        { root: classes.cssOutlinedInput,\r\n                        focused: classes.cssFocused,\r\n                        notchedOutline: classes.notchedOutline,\r\n                        input: classes.input,\r\n                        }\r\n                    }}  >\r\n                </TextField>\r\n                <TextField\r\n                    value={getValue2()}\r\n                    onChange={props.userInput}\r\n                    type= \"date\"\r\n                    name = \"yeastDump2\"\r\n                    className={classes.textField} \r\n                    variant=\"outlined\" \r\n                    label= \"Dump 2\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }} \r\n                    InputProps={{classes: \r\n                        { root: classes.cssOutlinedInput,\r\n                        focused: classes.cssFocused,\r\n                        notchedOutline: classes.notchedOutline,\r\n                        input: classes.input,\r\n                        }\r\n                    }}  >\r\n                </TextField>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(YeastAction);","import {connect} from 'react-redux';\r\nimport YeastAction from './Yeast';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      yeastDumpA: state.selectTank.yeastDump1,\r\n      yeastDumpB: state.selectTank.yeastDump2\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(YeastAction);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport '../../../../App.css';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925'\r\n    },\r\n\r\n    cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n    },\r\n    cssFocused: {},\r\n    cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\nconst Brix = (props) => {\r\n    const {classes} = props;\r\n    const brixAvg = props.brix.reduce((acc,brix,index) => acc+(brix-acc)/(index+1),0);\r\n\r\n    const getBrixDays = () => {\r\n        const currentDate = new Date();\r\n        const currentTime = currentDate.getTime()\r\n          \r\n        if(props.fBrix.length === 1) {\r\n            const lastDate = props.fBrix[props.fBrix.length-1].date\r\n            const update = Date.parse(lastDate)\r\n            const diffTime = currentTime - update;\r\n            const diff = new moment.duration(diffTime);\r\n            const days = diff.asDays();\r\n            return (Math.round(days *100)/100);\r\n        } else if (props.fBrix.length === 0) {\r\n            return 0\r\n        } else {\r\n            for(let i=props.fBrix.length-1; i > -1; i-- ){\r\n                let compareTemp = props.fBrix[i+1];\r\n                if (compareTemp !== undefined) {\r\n                  if (compareTemp.fBrix !== props.fBrix[i].fermentingBrix) {\r\n                    const getChangeDate = compareTemp.date;\r\n                    const updateDate = Date.parse(getChangeDate);\r\n                    const timeDiff = currentTime - updateDate;\r\n                    const diff = new moment.duration(timeDiff)\r\n                    const days = diff.asDays();\r\n                    return (Math.round(days *100)/100);\r\n                    }\r\n                }\r\n            }\r\n          \r\n        }\r\n          \r\n    }\r\n\r\n    const displayBrix = () => {\r\n        if (props.fermentingBrix) {\r\n            return props.fermentingBrix\r\n        } else if(props.selectBrix) {\r\n            return props.fermentingBrix\r\n        } else if (props.fBrix[props.fBrix.length-1]) {\r\n            return props.fBrix[props.fBrix.length-1].fermentingBrix\r\n        } else if(props.brix.length > 0) {\r\n            return brixAvg\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fermentationData\">\r\n            <p>Brix</p>\r\n            <div className = \"organizeFermentation\">\r\n                <TextField\r\n                    value={displayBrix()}\r\n                    onChange={props.userInput}\r\n                    onFocus ={props.changeBrix}\r\n                    onBlur = {props.changeBrix}\r\n                    type= \"number\"\r\n                    name = \"fermentingBrix\"\r\n                    className={classes.textField} \r\n                    variant=\"outlined\" \r\n                    label= \"Brix\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        classes: {\r\n                        root: classes.cssLabel,\r\n                        focused: classes.cssFocused,\r\n                        },\r\n                    }} \r\n                    InputProps={{classes: \r\n                        { root: classes.cssOutlinedInput,\r\n                        focused: classes.cssFocused,\r\n                        notchedOutline: classes.notchedOutline,\r\n                        input: classes.input,\r\n                        }\r\n                    }}  >\r\n                </TextField>\r\n                <TextField\r\n                    value={getBrixDays()}\r\n                    type= \"number\"\r\n                    name = \"Time\"\r\n                    className={classes.textField} \r\n                    label= \"For\"\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        classes: {\r\n                        root: classes.cssLabel,\r\n                        focused: classes.cssFocused\r\n                        },\r\n                    }} \r\n                    InputProps={{\r\n                        classes: {\r\n                            focused: classes.cssLabel\r\n                        },\r\n                        endAdornment: <InputAdornment position=\"end\">Days</InputAdornment>,\r\n                        readOnly: true\r\n                    }}  >\r\n                </TextField> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Brix);","import {connect} from 'react-redux';\r\nimport Brix from './Brix';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      brix: state.selectTank.brix,\r\n      fBrix: state.selectTank.fermentingBrix\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Brix);","import React from 'react';\r\nimport '../../../../App.css';\r\n\r\nconst Save = (props) => {\r\n\r\n    return (\r\n            <div className=\"fermentationData\" id=\"fermentationSave\">\r\n                <button className=\"allButtons\" id=\"saveButton\" onClick={props.sendUpdate}>\r\n                    Save Updates\r\n                </button>\r\n            </div>   \r\n    )\r\n\r\n}\r\n\r\nexport default Save;","import React from 'react';\r\nimport '../../../../App.css';\r\n\r\nconst EmptyStatus = () => {\r\n\r\n    return (\r\n            <div className=\"fermentationData\" id=\"fermentationSave\">\r\n                <button className=\"allButtons\" id=\"saveButton\" >\r\n                    Currently Being Built\r\n                </button>\r\n            </div>   \r\n    )\r\n\r\n}\r\n\r\nexport default EmptyStatus;","import React, { Component } from 'react';\r\nimport Nav from '../Nav/Nav';\r\nimport FermenterIcon from './FermenterIcon/FermenterIconContainer';\r\nimport AppBar from './AppComponents/AppBar/AppBarContainer';\r\nimport TemperatureList from './AppComponents/Temperature/TemparatureContainer';\r\nimport Spund from './AppComponents/Spund/Spund';\r\nimport Yeast from './AppComponents/Yeast/YeastContainer';\r\nimport Brix from './AppComponents/Brix/BrixContainer';\r\nimport Save from './AppComponents/Save/Save';\r\nimport EmptyStatus from './AppComponents/Empty/EmptyStatus';\r\nimport {updateFermentation} from './ProductionFetch';\r\nimport '../../App.css';\r\n\r\n\r\nclass ProductionTank extends Component  {\r\n    state = {\r\n        status: \"\",\r\n        tankTemp: \"\",\r\n        fermentingBrix:\"\",\r\n        spund: false,\r\n        spundPressure: \"\",\r\n        yeastDump1: \"\",\r\n        yeastDump2: \"\",\r\n        select: false,\r\n        selectBrix: false\r\n    }\r\n\r\n    userInput = (e) => {\r\n        const selectName = e.target.name;\r\n        this.setState({\r\n            [selectName]: e.target.value\r\n        })\r\n    }\r\n\r\n    spundInput = () => {\r\n        this.setState({\r\n            spund: !this.state.spund\r\n        })\r\n    }\r\n\r\n    statusUpdate = (value) => {\r\n        this.setState({\r\n            status: value\r\n        })\r\n    }\r\n\r\n    changeSelect = () => {\r\n        this.setState({\r\n            select: !this.state.select\r\n        })\r\n    }\r\n\r\n    changeBrix = () => {\r\n        this.setState({\r\n            selectBrix: !this.state.selectBrix\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    sendUpdate = () => {\r\n        const tankObj= {};\r\n        const loopState = Object.entries(this.state);\r\n        for (const [key, value] of loopState) {\r\n            if (value && (key === 'tankTemp' || key === 'fermentingBrix')) {\r\n                tankObj[key] = {\r\n                    [key]: value,\r\n                    date: new Date()\r\n                }\r\n            } else if(value) {\r\n                tankObj[key] = value;\r\n            }\r\n            \r\n        }\r\n        // fetch to update fermentation tank then redirect to homepage\r\n        updateFermentation(tankObj,this.props.tank,this.props.number)\r\n            .then(() => {\r\n                this.renderRedirect()\r\n            })\r\n            .catch(err => {\r\n                console.error('Request failed', err)\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if(this.props.tank) {\r\n            this.setState({\r\n                spund: this.props.close,\r\n                spundPressure: this.props.pressure\r\n            })\r\n        } else {\r\n            // fetch current tank from url params and update store\r\n            const getTankParams = this.props.match.params;\r\n                this.props.setTank(getTankParams.tank)\r\n                .then (() => {\r\n                    this.setState({\r\n                        spund: this.props.close,\r\n                        spundPressure: this.props.pressure\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.error('Request failed', err)\r\n                });\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n    \r\n    render () {\r\n        return (\r\n            <main>\r\n                {this.props.tank \r\n                    ?\r\n                    <div>\r\n                        <Nav />\r\n                            <div id=\"fermentationBox\">\r\n                                <FermenterIcon/>\r\n                                <section id = \"fermentationForm\">\r\n                                    <div>\r\n                                        <AppBar statusUpdate={this.statusUpdate}/>\r\n                                        {this.props.status === 'fermenting' || this.props.status === 'conditioning'\r\n                                            ?\r\n                                            <div>\r\n                                                <TemperatureList \r\n                                                    userInput={this.userInput} \r\n                                                    tankTemp={this.state.tankTemp}\r\n                                                    changeSelect={this.changeSelect}\r\n                                                    select={this.state.select} \r\n                                                />\r\n                                                {this.props.status === 'fermenting' ? \r\n                                                    <Brix \r\n                                                        userInput={this.userInput} \r\n                                                        fermentingBrix={this.state.fermentingBrix}\r\n                                                        changeBrix={this.changeBrix}\r\n                                                        selectBrix={this.state.selectBrix} \r\n                                                    /> \r\n                                                    : \r\n                                                    <Yeast \r\n                                                        userInput={this.userInput} \r\n                                                        yeastDump2 = {this.state.yeastDump2} \r\n                                                        yeastDump1 = {this.state.yeastDump1}\r\n                                                    />\r\n                                                }\r\n                                                <Spund \r\n                                                    spundInput={this.spundInput} \r\n                                                    spund={this.state.spund} \r\n                                                    spundPressure={this.state.spundPressure}\r\n                                                    userInput={this.userInput}\r\n                                                />\r\n                                                <Save sendUpdate={this.sendUpdate}/>\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                <EmptyStatus/>\r\n                                            </div>\r\n                                            }\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                <Nav/>                \r\n            }\r\n        </main>\r\n        )      \r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default ProductionTank;","\r\n\r\nexport function updateFermentation(data,tank,batch) {\r\n    return fetch(`/fermenters/${tank}/brew/${batch}`, {\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'PUT'\r\n      })\r\n}\r\n\r\nexport function getFermenter(tank) {\r\n  return fetch(`/fermenters/${tank}`, {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'GET'\r\n    })\r\n} ","import { getFermenter } from \"./ProductionFetch\";\r\n\r\nexport function setTank(tank) {\r\n    return function (dispatch) {\r\n        return getFermenter(tank)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                dispatch({\r\n                        type: \"SET_TANK\",\r\n                        value: data[0]\r\n                        })\r\n                })\r\n    }\r\n}","import {connect} from 'react-redux';\r\nimport ProductionTank from './ProductionTank';\r\nimport {setTank} from './ProductionActions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      status: state.selectTank.status,\r\n      temp: state.selectTank.tankTemp,\r\n      number: state.selectTank.number,\r\n      tank: state.selectTank.tank,\r\n      close: state.selectTank.spund,\r\n      pressure: state.selectTank.spundPressure\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setTank: tank => dispatch(setTank(tank))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductionTank);","import '../../../App.css';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    \r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925',\r\n        fontSize: 15\r\n    },\r\n\r\n      cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n      },\r\n      cssFocused: {\r\n      },\r\n      cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n      cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\n\r\n \r\n\r\n  const StyleBatch = (props) => {\r\n    const {classes} = props;\r\n    const previousBatch = props.brewBatch.prevNum;\r\n    const batchNum = props.brewBatch.number;\r\n    const batchEnter = props.brewBatch.batch.enter;\r\n\r\n\r\n\r\n    const userNumberOptions = () => {\r\n      if (previousBatch && props.brewBatch.batch.prevId !== 'D') {\r\n        const numOptions = [previousBatch, previousBatch+1];\r\n        return numOptions\r\n      } else if (previousBatch && props.brewBatch.batch.prevId === 'D') {\r\n        return [previousBatch+1]\r\n      } else if (!previousBatch && batchNum) {\r\n        const num = [batchNum];\r\n        return num\r\n      } else {\r\n        return [1];\r\n      }\r\n    }\r\n\r\n    const userIdOptions = () => {\r\n      if(previousBatch === batchNum) {\r\n          const getLastId = props.brewBatch.batch.prevId;\r\n          const toChar = getLastId.charCodeAt(0)\r\n          const optionArr = [];\r\n\r\n          for(let i=toChar+1; i<69; i++) {\r\n              optionArr.push(i);\r\n          }\r\n\r\n          const letterOptions = optionArr.map ( num => {\r\n              return String.fromCharCode(num)\r\n          })\r\n\r\n          return letterOptions;\r\n      } else if (previousBatch !== batchNum && !batchEnter) {\r\n         let optionB = [];\r\n         return optionB=['A'];\r\n      } else if(batchEnter) {\r\n         let optionC = [];\r\n        return optionC = [props.brewBatch.batch.id]\r\n      } else {\r\n        let optionD = [];\r\n        return optionD=[batchNum];\r\n      }\r\n    }\r\n\r\n    const styleOptions = () => {\r\n      let style = ['Goat', 'BucketHead', 'Dillo', 'Pailhead', 'Specialty']\r\n      const currentStyle = [props.brewBatch.style]\r\n      if (previousBatch === batchNum) {\r\n        style = [props.brewBatch.prevStyle];\r\n        return style\r\n      } else if (previousBatch !== batchNum && previousBatch === '') {\r\n        return currentStyle\r\n      } else {\r\n        return style\r\n      }\r\n    }\r\n\r\n    const tankOptions = () => {\r\n      let openTanks = props.brewBatch.openTanks;\r\n      const currentTank = [props.brewBatch.tank];\r\n      let tank = [\"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\"]\r\n      if (previousBatch === batchNum) {\r\n        tank = [props.brewBatch.prevTank];\r\n        return tank\r\n      } else if (previousBatch !== batchNum && previousBatch !== '' && props.brewBatch.tank !== \"\") {\r\n        return openTanks\r\n      } else if (previousBatch !== batchNum && previousBatch !== '') {\r\n        return openTanks\r\n      } else if (previousBatch !== batchNum && previousBatch === '') {        \r\n        return currentTank\r\n      } else {\r\n        return tank\r\n      }\r\n    }\r\n\r\n    const inputNames = ['Brew Number', 'Brew Letter', 'Style', 'Tank'];\r\n\r\n    const inputs = [\r\n        {\r\n          name:\"number\",\r\n          value: batchNum,\r\n          onChange: props.handleBrewNumber,\r\n          options: userNumberOptions()\r\n        },\r\n        {\r\n          name:\"id\",\r\n          value: props.brewBatch.batch.id,\r\n          onChange: props.handleBatch,\r\n          options: userIdOptions()\r\n        },\r\n        {\r\n          name:\"style\",\r\n          value: props.brewBatch.style,\r\n          onChange: props.handleBrewNumber,\r\n          options: styleOptions()\r\n        },\r\n        {\r\n          name:\"tank\",\r\n          value: props.brewBatch.tank,\r\n          onChange: props.handleBrewNumber,\r\n          options: tankOptions()\r\n        }\r\n      ];\r\n\r\n      \r\n\r\n    return (\r\n      inputs.map((input,index) =>\r\n            <TextField\r\n                select\r\n                value={input.value}\r\n                onChange={input.onChange}\r\n                name = {input.name}\r\n                key ={index} \r\n                className={classes.textField} \r\n                variant=\"outlined\" \r\n                label= {inputNames[index]}\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                    },\r\n                  }} \r\n                InputProps={{classes: \r\n                    { root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                      input: classes.input,\r\n                    },\r\n                    readOnly: batchEnter\r\n                  }}  > \r\n\r\n                  {input.options \r\n                    ? \r\n                      input.options.map( (option, index) =>\r\n                        <MenuItem key={index} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                        )\r\n                  : null}\r\n              </TextField>\r\n              \r\n          )\r\n        )\r\n\r\n  }\r\n\r\n  export default withStyles(styles)(StyleBatch);\r\n\r\n  ","import '../../../App.css';\r\nimport React from 'react';\r\nimport StyleBatch from './StyleBatch';\r\n\r\n\r\nconst StartBatch = (props) => {\r\n    return (\r\n      <section className=\"userInputs\">\r\n          <h2>Brew Information</h2>\r\n          <form className=\"batchValue\">\r\n              <StyleBatch {...props} />\r\n          </form>\r\n          <div id=\"batchEnter\">\r\n              {!props.brewBatch.batch.enter\r\n                ? \r\n                <button onClick={props.handleEnter} className=\"allButtons\">Enter Batch</button> \r\n                : \r\n                <button onClick={props.handleDelete} className=\"allButtons\">Delete Batch</button>\r\n              }\r\n          </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default StartBatch;","import '../../../App.css';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n\r\n    formControl: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        backgroundColor: '#d1d0bb',\r\n      },\r\n    \r\n    input: {\r\n        color: '#5c4925'\r\n    },\r\n\r\n      cssLabel: {\r\n        '&$cssFocused': {\r\n          color: '#5c4925',\r\n          fontWeight: 'bold',\r\n          fontSize: 15\r\n        },\r\n      },\r\n      cssFocused: {},\r\n      cssUnderline: {\r\n        '&:after': {\r\n          borderBottomColor: '#5c4925',\r\n        },\r\n      },\r\n      cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n          borderColor: '#5c4925',\r\n        },\r\n      },\r\n\r\n      notchedOutline: {\r\n      },\r\n  });\r\n\r\n  const BrewMetricsStyle = (props) => {\r\n    const {classes} = props;\r\n\r\n    const inputNames = ['Strike Volume', 'Mash Temp', 'Sparge Volume', \r\n                        'Kettle Brix', 'Kettle Volume', 'Whirlpool Volume',\r\n                        'Flow Meter Volume','Run Off Temperature', 'Fermenter Temperature', 'Notes'];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"number\", \r\n        name:\"strikeVolume\",\r\n        value: props.brewBatch.batch.strikeVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"mashTemp\",\r\n        value: props.brewBatch.batch.mashTemp,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"spargeVolume\",\r\n        value: props.brewBatch.batch.spargeVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"startingBrix\",\r\n        value: props.brewBatch.batch.startingBrix,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"kettleVolume\",\r\n        value: props.brewBatch.batch.kettleVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"whirlPoolVolume\",\r\n        value: props.brewBatch.batch.whirlPoolVolume,\r\n        onChange: props.handleBatch\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"fmVolume\",\r\n        value: props.brewBatch.batch.fmVolume,\r\n        onChange: props.handleBatch,\r\n        required: true\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name:\"runOffTemp\",\r\n        value: props.brewBatch.batch.runOffTemp,\r\n        onChange: props.handleBatch,\r\n        required: true\r\n      },\r\n      {\r\n        type: \"number\", \r\n        name: \"tankTemp\",\r\n        value: props.brewBatch.batch.tankTemp,\r\n        onChange: props.handleBatch,\r\n        required: true\r\n      },\r\n      {\r\n        type: \"text\", \r\n        name:\"notes\",\r\n        value: props.brewBatch.batch.notes,\r\n        onChange: props.handleBatch\r\n      }\r\n    ];\r\n\r\n    return (\r\n      inputs.map((input,index) =>\r\n        <TextField\r\n            value={input.value}\r\n            onChange={input.onChange}\r\n            type= {input.type}\r\n            name = {input.name}\r\n            key ={index} \r\n            className={classes.textField} \r\n            variant=\"outlined\" \r\n            label= {inputNames[index]}\r\n            margin=\"normal\"\r\n            required = {input.required}\r\n            InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                  focused: classes.cssFocused,\r\n                },\r\n              }} \r\n            InputProps={{classes: \r\n                { root: classes.cssOutlinedInput,\r\n                  focused: classes.cssFocused,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  input: classes.input\r\n                }\r\n          }}  >\r\n        </TextField>\r\n      )\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  export default withStyles(styles)(BrewMetricsStyle);","import '../../../App.css';\r\nimport React from 'react';\r\nimport BrewMetricsStyle from './BrewMetricsStyle';\r\n\r\nconst BrewMetrics = (props) => {\r\n    return (\r\n        <section className=\"userInputs\">\r\n            <h2>Brew Data</h2>\r\n            <form className=\"batchValue\">\r\n                <BrewMetricsStyle {...props} />\r\n            </form>\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default BrewMetrics;","import '../../../App.css';\r\nimport React from 'react';\r\n\r\n\r\nconst Transfer = (props) => {\r\n\r\n    return (\r\n        <button className=\"allButtons\" onClick={props.handleTransfer}>\r\n           Runoff To {props.brewBatch.tank} \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Transfer;","import React from 'react';\r\nimport Nav from '../Nav/Nav';\r\nimport '../../App.css';\r\nimport StartBatch from './StartBatch/StartBatch';\r\nimport BrewMetrics from './BrewMetrics/BrewMetrics';\r\nimport Transfer from './Transfer/Transfer';\r\n\r\nconst BrewView = (props) => {\r\n\r\n    return (\r\n        <main id=\"brewMain\">\r\n            <Nav />\r\n            <section id=\"startBatch\">\r\n                <StartBatch {...props} />\r\n                {props.brewBatch.batch.enter ? \r\n                    <section>\r\n                        <BrewMetrics {...props}/>\r\n                        <Transfer {...props} /> \r\n                    </section>\r\n                    : \r\n                    null\r\n                }\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BrewView;","\r\nexport function createNewBatch(batch) {\r\n    return fetch(`/brews/${batch.number}/batches/${batch.batch.id}`, {\r\n        body: JSON.stringify(batch),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        method: 'POST'\r\n      }).catch(err => {\r\n        console.error('Request failed', err)\r\n      })\r\n}\r\n\r\nexport function addNewBrew(batch) {\r\n  return fetch(`/brews/${batch.number}/batches/${batch.batch.id}`, {\r\n    body: JSON.stringify(batch),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'PUT'\r\n  }).catch(err => {\r\n    console.error('Request failed', err)\r\n  })\r\n}\r\n\r\nexport function updateBatch(batchObj) {\r\n    return fetch(`/brews/${batchObj.number}/batches/${batchObj.batch.id}`, {\r\n      body: JSON.stringify(batchObj),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'PATCH'\r\n      })\r\n}\r\n\r\n// Putting batch into a tank. Not sure this is the best organizational practice. Wondering if I can use redux to change the state. Will componentDidMount retrieve information\r\nexport function fillFermenters(id, tankObj, batch) {\r\n  return fetch(`/fermenters/${tankObj.tank}/brew/${id}/batch/${batch}`, {\r\n    body: JSON.stringify(tankObj),\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'PUT'\r\n    })\r\n}\r\n\r\n\r\nexport function getBatch() {\r\n  return fetch(\"/brews\", {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'GET'\r\n    })\r\n    .then(response => response.json())\r\n}\r\n\r\nexport function getLastSubmit() {\r\n  return fetch(\"/brews/lastsubmittal\", {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'GET'\r\n    })\r\n    .then(response => response.json())\r\n}\r\n\r\nexport function deleteBrew(number) {\r\n  return fetch(`/brews/${number}`, {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'DELETE'\r\n    })\r\n    .catch(err => {\r\n      console.error('Request failed', err)\r\n    })\r\n}\r\n\r\nexport function deleteBatch(number, id) {\r\n  return fetch(`/brews/${number}/batches/${id}`, {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    method: 'DELETE'\r\n    }).catch(err => {\r\n      console.error('Request failed', err)\r\n    })\r\n} ","import React, {Component} from 'react';\r\nimport BrewView from './BrewView';\r\nimport {createNewBatch, addNewBrew, getBatch, updateBatch, fillFermenters, getLastSubmit, deleteBrew, deleteBatch} from './BrewFetch';\r\nimport {getFermenters} from '../Home/Fermenter/FermenterFetch';\r\n\r\nclass BrewContainer extends Component {\r\n\r\n    state = {\r\n      number: '',\r\n      prevNum: '',\r\n      style: '',\r\n      prevStyle: '',\r\n      tank: '',\r\n      prevTank: '',\r\n      status: '',\r\n      opentTanks: '',\r\n      batch: \r\n          {id: \"\",\r\n           prevId: \"\",\r\n           strikeVolume: \"\",\r\n           mashTemp: \"\",\r\n           spargeVolume: \"\",\r\n           startingBrix: \"\",\r\n           kettleVolume: \"\",\r\n           whirlPoolVolume: \"\",\r\n           fmVolume: \"\",\r\n           tankTemp: \"\",\r\n           runOffTemp: \"\",\r\n           notes: '',\r\n           enter: false,\r\n           submit: false,\r\n          }      \r\n    }\r\n\r\n    // stores the setInterval value\r\n    runInterval = 0;\r\n    \r\n      \r\n    handleBrewNumber = (e) => {\r\n      const name = e.target.name;\r\n      const val = e.target.value;\r\n\r\n      this.setState({ [name]: val });\r\n    }\r\n\r\n    handleBatch = (e) => {\r\n      const { batch } = { ...this.state };\r\n      const currentState = batch;\r\n      const name = e.target.name;\r\n      currentState[name] = e.target.value\r\n\r\n      this.setState({ batch: currentState});\r\n\r\n    }\r\n\r\n    updateMetricData = () => {\r\n      const number = this.state.number;\r\n      const batch = this.state.batch;\r\n      const batchObj = {\r\n        number: number,\r\n        batch: batch,\r\n      }\r\n      \r\n      updateBatch(batchObj)\r\n      .catch(err => {\r\n        console.error('Request failed', err)\r\n      })\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n      e.preventDefault();\r\n      this.setState({ \r\n        batch: {\r\n            ...this.state.batch,\r\n            enter: !this.state.enter\r\n          }}, () => {\r\n            const getData = this.state;\r\n            if (this.state.prevNum === this.state.number) {\r\n              // fetch call to update a brew with a new batch. There a multiple batches to a brew\r\n              addNewBrew(getData);\r\n            } else {\r\n              // fetch call to create a new batch into a new brew\r\n              createNewBatch(getData);\r\n            }\r\n            this.runInterval = setInterval(() => this.updateMetricData(),30000)\r\n          });   \r\n    }\r\n\r\n    handleDelete = () => {\r\n      const number = this.state.number;\r\n      const id = this.state.batch.id;\r\n\r\n      if(id === 'A') {\r\n        clearInterval(this.runInterval);\r\n        deleteBrew(number)\r\n        this.setState({\r\n          batch: {\r\n            ...this.state.batch,\r\n            strikeVolume: \"\",\r\n            mashTemp: \"\",\r\n            spargeVolume: \"\",\r\n            startingBrix: \"\",\r\n            kettleVolume: \"\",\r\n            whirlPoolVolume: \"\",\r\n            fmVolume: \"\",\r\n            tankTemp: \"\",\r\n            runOffTemp: \"\",\r\n            notes: '',\r\n            enter: !this.state.batch.enter\r\n          }\r\n        })      \r\n      } else {\r\n        clearInterval(this.runInterval);\r\n        deleteBatch(number,id);\r\n        this.setState({\r\n          number: \"\",\r\n          style: \"\",\r\n          tank: \"\",\r\n          batch : {\r\n            ...this.state.batch,\r\n            strikeVolume: \"\",\r\n            mashTemp: \"\",\r\n            spargeVolume: \"\",\r\n            startingBrix: \"\",\r\n            kettleVolume: \"\",\r\n            whirlPoolVolume: \"\",\r\n            fmVolume: \"\",\r\n            tankTemp: \"\",\r\n            runOffTemp: \"\",\r\n            notes: '',\r\n            id: \"\",\r\n            enter: !this.state.batch.enter\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    handleTransfer = () => {\r\n      this.setState({\r\n        status: \"fermenting\",\r\n        batch: {\r\n        ...this.state.batch,\r\n        submit: !this.state.submit\r\n        }}, () => {\r\n        const id = this.state.number;\r\n        const tank = this.state.tank;\r\n        const style = this.state.style;\r\n        const runOff = this.state.batch.submit\r\n        const batch = this.state.batch;\r\n        const batchObj = {\r\n            number: id,\r\n            batch: batch\r\n        }\r\n        const tankObj = {\r\n            number: id,\r\n            tank: tank,\r\n            style: style,\r\n            batch: batch.fmVolume,\r\n            brix: this.state.batch.startingBrix,\r\n            runOff: runOff,\r\n            tankTemp: this.state.batch.tankTemp,\r\n            status: this.state.status\r\n        }\r\n        \r\n        updateBatch(batchObj)\r\n          .then(() => {\r\n            fillFermenters(id, tankObj, batch.id)\r\n              .then(() => {\r\n                this.renderRedirect();\r\n              });\r\n          })\r\n          .catch(err => {\r\n            console.error('Request failed', err)\r\n          })\r\n        })      \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      clearInterval(this.runInterval);\r\n    }\r\n\r\n    // user get redirected to homepage after clicking on Runoff Button\r\n    renderRedirect = () => {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    // change data from componentdidmount fetch to \"\" instead of null\r\n    changeNull = (data) => {\r\n        const batchVal = data.batch[data.batch.length-1];\r\n        \r\n        for (let val in batchVal) {\r\n          const values = batchVal[val]\r\n          if (typeof values === 'object') {\r\n            batchVal[val] = '';\r\n          }\r\n        }\r\n        return data\r\n    }\r\n    // set state after fetch call with data from a batch where brewer is still entering information\r\n    updateStateBatchBrewing = (data) => {\r\n      const lastBatch = data.batch[data.batch.length-1];\r\n      this.setState(\r\n        {\r\n          number: data.number,\r\n          style: data.style,\r\n          tank: data.tank,\r\n          status: data.status,\r\n          batch: {\r\n            id: lastBatch.id,\r\n            strikeVolume: lastBatch.strikeVolume,\r\n            mashTemp: lastBatch.mashTemp,\r\n            spargeVolume: lastBatch.spargeVolume,\r\n            startingBrix: lastBatch.startingBrix,\r\n            kettleVolume: lastBatch.kettleVolume,\r\n            whirlPoolVolume: lastBatch.whirlPoolVolume,\r\n            fmVolume: lastBatch.fmVolume,\r\n            tankTemp: lastBatch.tankTemp,\r\n            runOffTemp: lastBatch.runOffTemp,\r\n            notes: lastBatch.notes,\r\n            enter: lastBatch.enter,\r\n            submit: lastBatch.submit\r\n          }\r\n        })\r\n    }\r\n\r\n    // set state after fetch call with data from a batch that has been finished and placed into a fermenter\r\n    updateStateLastCompletedBrew = (data) => {\r\n      const findLastSubmit = data;\r\n      const batchArr = findLastSubmit.batch\r\n      for(let i=batchArr.length-1; i >= 0; i--) {\r\n        if (batchArr[i].submit === true) {\r\n          return this.setState({\r\n            prevNum: data.number,\r\n            prevStyle: data.style,\r\n            prevTank: data.tank,\r\n            batch: {\r\n              ...this.state.batch,\r\n              prevId: batchArr[i].id\r\n            }\r\n          })\r\n        } \r\n      }\r\n    }\r\n\r\n    inputBatchSequence = () => {\r\n      getBatch()\r\n          .then(data => {\r\n            const brewIsEnterObj = data[0];      \r\n            if (brewIsEnterObj !== undefined) {\r\n                this.changeNull(brewIsEnterObj)\r\n                this.updateStateBatchBrewing(brewIsEnterObj)\r\n                getLastSubmit()\r\n                  .then(lastBrewEnter => {\r\n                    this.updateStateLastCompletedBrew(lastBrewEnter);\r\n                  })\r\n                  .then(() =>{\r\n                    this.runInterval = setInterval(() => this.updateMetricData(),30000)\r\n                  }).catch(err => {\r\n                    console.error('Request failed', err)\r\n                  }) \r\n                                            \r\n              } else {\r\n                // if last batch has runOff to fermenter get information from this batch for input options\r\n                getLastSubmit()\r\n                    .then(data => {\r\n                        this.updateStateLastCompletedBrew(data);\r\n                      })\r\n                      .catch(err => {\r\n                        console.error('Request failed', err)\r\n                      });\r\n              }\r\n        })\r\n        .catch(err => {\r\n          console.error('Request failed', err)\r\n        })\r\n        // get open fermenters\r\n        getFermenters()\r\n                  .then(response => response.json())\r\n                  .then(data => {\r\n                  // FIND only empty tanks\r\n                    const emptyTanks = data.reduce( (acc,tank) => {\r\n                        if(!tank.runOff) {\r\n                          acc.push(tank.tank);\r\n                        }\r\n                        return acc\r\n                    }, [])\r\n                    this.setState({\r\n                      openTanks: emptyTanks\r\n                    })\r\n                }).catch(err => {\r\n                    console.error('Request failed', err)\r\n                })                  \r\n    }\r\n  \r\n    componentDidMount = () => {\r\n       this.inputBatchSequence();\r\n    }\r\n\r\n    render () {\r\n      return(\r\n        <div>\r\n            <BrewView \r\n              brewBatch={this.state} \r\n              handleBrewNumber={this.handleBrewNumber} \r\n              handleBatch={this.handleBatch} \r\n              handleEnter={this.handleEnter}\r\n              handleTransfer={this.handleTransfer}\r\n              handleDelete={this.handleDelete}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BrewContainer;","import React, { Component } from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './Components/Home/Home';\r\nimport ProductionTank from './Components/ProductionTank/ProductionContainer';\r\nimport BrewContainer from './Components/Brew/BrewContainer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route path ='/' exact render ={ (props) => <Home {...props}/> } />\r\n          <Route path ='/Brew' render ={ (props) => <BrewContainer {...props}/> } />\r\n          <Route path ='/ProductionTank/:tank' render ={ (props) => <ProductionTank {...props}/> } />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}